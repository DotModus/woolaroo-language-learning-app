@use '@angular/material' as mat;
@import '../../style/components';
@import '../../style/palette';

// Custom variables for button sizes
:root {
  --capture-icon-scale: 3.5;  // Significantly increase this for a larger icon
  --capture-button-size: min(100px, 25%);  // Reduced from 120px to 100px
  --capture-button-size-desktop: min(110px, 25%);  // Reduced from 130px to 110px
  --load-photo-icon-scale: 2;  // Increase the load-photo scale
}

// Apply black background to the entire host component
:host {
  display: block;
  width: 100%;
  height: 100%;
  background-color: #1F1B16;
}

// Center error popup within camera frame
::ng-deep .capture-camera-error .mat-dialog-container {
  margin-top: -10vh;
}

.mat-drawer-container {
  background-color: #000 !important; // Use !important to override Angular Material's styles
  height: 100%;

  .mat-sidenav {
    width: 375px;
    max-width: 80%;
  }
}

mat-sidenav-content {
  background-color: #000;
}

// Main layout structure using flexbox
.capture-layout {
  display: flex;
  flex-direction: column;
  height: calc(100vh - 56px); // Subtract toolbar height
  width: 100%;
  margin-top: 50px; // Top margin instead of padding-top
  background-color: #1F1B16;
}

.capture-section {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

// Top section with instructions - 20% of available height
.top-section {
  flex: 1;
  height: 20%;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 2;
  background-color: transparent;
}

// Middle section with camera preview - 60% of available height
.middle-section {
  flex: 3;
  height: 60%;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1;
  background-color: transparent;
  padding: 10px 0;
}

// Bottom section with bottom container - 20% of available height
.bottom-section {
  flex: 1;
  height: 20%;
  min-height: 120px; // Reduced to accommodate the 100px height container plus padding
  display: flex;
  justify-content: center; // Center horizontally
  align-items: center; // Center vertically
  z-index: 2;
  background-color: transparent;
  padding: 10px 0;

  @media only screen and (max-width: 480px) {
    min-height: 120px;
  }

  @media only screen and (min-width: 768px) {
    min-height: 120px;
  }
}

// Camera preview container - using flexbox instead of absolute positioning
.camera-preview-container {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  background-color: #000;

  // Mobile view
  @media only screen and (max-width: 480px) {
    max-width: min(330px, 95vw);
    max-height: min(440px, 60vh);
  }

  // Desktop view
  @media only screen and (min-width: 481px) {
    max-width: 290px;
    max-height: 290px;
  }
}

// Add a class for the camera viewport - using flexbox
.camera-viewport {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  border-radius: 12px;
  box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.1);

  // Mobile dimensions: 330px x 440px with proportional scaling
  @media only screen and (max-width: 480px) {
    max-width: min(330px, 95vw);
    max-height: min(440px, 60vh);
    width: 95vw;
    height: calc(95vw * 4/3); // 4:3 aspect ratio (330:440 simplified)
    aspect-ratio: 3/4; // Match the 330:440 ratio
  }

  // Larger screens: 290px x 290px
  @media only screen and (min-width: 481px) {
    max-width: 290px;
    max-height: 290px;
    width: 290px;
    height: 290px;
    aspect-ratio: 1/1; // Square aspect ratio
  }
}

app-camera-preview {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  border-radius: inherit;

  ::ng-deep video {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  ::ng-deep .captured-image {
    display: none;
  }
}

.instruction-text {
  text-align: center;
  font-size: clamp(1.125rem, 3vw, 1.5rem); // Responsive font size between 18px and 24px
  font-weight: 300;
  line-height: 1.5;
  color: #EAE1D9;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.6);
  width: 90%;
  max-width: 400px;
  padding: 0 10px;
}

.camera-frame {
  width: 100%;
  height: 100%;
  background-size: contain;
  filter: drop-shadow(0 0 10px rgba(0, 0, 0, 0.5));
  pointer-events: none;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 12px;

  // Mobile dimensions: 330px x 440px with proportional scaling
  @media only screen and (max-width: 480px) {
    max-width: min(330px, 95vw);
    max-height: min(440px, 60vh);
    width: 95vw;
    height: calc(95vw * 4/3); // 4:3 aspect ratio (330:440 simplified)
    aspect-ratio: 3/4; // Match the 330:440 ratio
  }

  // Larger screens: 290px x 290px
  @media only screen and (min-width: 481px) {
    max-width: 290px;
    max-height: 290px;
    width: 290px;
    height: 290px;
    aspect-ratio: 1/1; // Square aspect ratio
  }
}

// RTL support
:host-context([dir=rtl]) {
  .bottom-section {
    flex-direction: row-reverse;
  }
}

app-toolbar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 10;
  background-color: #1E1E1E !important;
}

// Force black background on Angular Material components
::ng-deep {
  .mat-drawer-container,
  .mat-drawer-content,
  .mat-sidenav-content {
    background-color: #000 !important;
  }

  .mat-toolbar {
    background-color: #1E1E1E !important;
  }
}

// Bottom container with dimensions matching camera preview width and fixed 100px height
.bottom-container {
  width: 100%;
  height: 100px;
  background-color: transparent;
  display: flex;
  justify-content: center;
  align-items: center;

  // Mobile dimensions: match camera preview width (330px)
  @media only screen and (max-width: 480px) {
    max-width: min(330px, 95vw);
    width: 95vw;
  }

  // Desktop dimensions: match camera preview width (290px)
  @media only screen and (min-width: 481px) {
    max-width: 290px;
    width: 290px;
  }
}

// Container for the icons inside the red div
.icon-container {
  display: flex;
  justify-content: flex-start; // Left-justify the icons
  align-items: center;
  gap: 30px; // Increased space between the icons
  width: 90%; // Set a width to give some padding from the edges
  padding-left: 20px; // Increased padding on the left
}

// Icon button base styles
.load-photo-icon, .capture-icon {
  background: transparent;
  border: none;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  border-radius: 50%;
  background-color: transparent; // Darker background for better contrast against transparent container
  box-shadow: none !important; // Add shadow for depth

  &:hover {
    background-color: transparent; // Darker on hover
  }

  app-icon {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center; // Ensure icon is centered horizontally
    align-items: center; // Ensure icon is centered vertically
    position: relative; // For precise positioning

    ::ng-deep svg {
      position: absolute; // Allow for precise centering
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%); // Center the SVG exactly
    }
  }
}

// Load photo icon specific styles
.load-photo-icon {
  width: 50px;
  height: 50px;

  app-icon ::ng-deep svg {
    width: 24px;
    height: 24px;
    fill: #DEC2A2 !important;
    // filter: drop-shadow(0 0 2px rgba(222, 194, 162, 0.3)); // Add subtle glow
  }
}

// Capture icon specific styles
.capture-icon {
  width: 65px; // Reduced from 80px
  height: 65px; // Reduced from 80px
  background-color:transparent; // Darker background for emphasis



  app-icon {
    ::ng-deep svg {
      fill: mat.get-color-from-palette($app-primary, 500) !important;
      width: 40px !important; // Reduced from 50px
      height: 40px !important; // Reduced from 50px
      transform: translate(-50%, -50%) scale(1.5); // Reduced scale from 1.7
    //   filter: drop-shadow(0 0 4px rgba(255, 255, 255, 0.6)); // Enhanced glow for better visibility
    }
  }
}
